user	root;
# # #定义Nginx运行的用户和用户组
worker_processes   auto;
worker_rlimit_nofile   65536;
error_log logs/error.log error;

# event context
events {
    accept_mutex   off;
    # # #使用epoll（linux2.6的高性能方式）
    ## use   epoll;
    # # #每个进程最大连接数（最大连接=连接数x进程数）
    worker_connections   20480;
}
env RUN_MODE=prod;
http {
    resolver 8.8.8.8;	
	access_log off;
	log_format   scribe 'st:$time_local|^|ip:$http_x_forwarded_for|^|status:$status|^|up_addr:$upstream_addr|^|up_status:$upstream_status|^|user: $remote_user|^|request:$request|^|reqbody:$request_body|^|referer:$http_referer|^|ua:$http_user_agent|^|byte:$body_bytes_sent|^|http_x_forwarded_for:$http_x_forwarded_for|^|timeuse:$request_time|^|upstream_response_time:$upstream_response_time|^|request_time:$request_time|^|server_name:$server_name|^|host:$host|^|hostname:$hostname|^|server_protocol:$server_protocol|^|request_method:$request_method|^|request_uri:$request_uri|^|bytes_sent:$bytes_sent|^|gzip_ratio:$gzip_ratio|^|sent_http_tid:$sent_http_tid|^|sent_http_rid:$sent_http_rid|^|sent_http_uid:$sent_http_uid';
	
    default_type   text/html;
    # # #默认文件类型
    charset   utf-8;
    # # #日志文件格式
    #log_empty_request   off;
    # # #autoindex on; #开启目录列表访问，合适下载服务器，默认关闭。
    tcp_nopush   on;
    # # #防止网络阻塞
    tcp_nodelay   on;
    # # #输出缓冲区
    output_buffers   4 32k;
    # # #输出拆包大小
    postpone_output   1460;
    client_header_buffer_size   512k;
    # # #缓冲区代理缓冲用户端请求的最大字节数
    large_client_header_buffers   4 1024k;
    # # #客户端发送header超时
    client_body_timeout   30;
    # # #发送到客户端超时
    send_timeout   30;
    # # #注意：如果图片显示不正常把这个改成off。
    sendfile   on;
    # # #keepalive_timeout  1;
	keepalive_timeout  30;
    keepalive_requests   5000;
    gzip   on;
    # # #开启gzip压缩输出
    gzip_min_length   1k;
    # # #最小压缩文件大小
    gzip_buffers   4 16k;
    # # #压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn
    gzip_types   text/plain application/x-javascript text/css application/xml;
    gzip_comp_level   9;
    # # #压缩比率,1 压缩比最小处理速度最快，9 压缩比最大但处理速度最慢（传输快但比较消耗cpu）
    gzip_proxied   any;
    # # #压缩通过代理的所有文件
    gzip_vary   on;
	
	#加载server配置
    include feijiang/*.conf;
}